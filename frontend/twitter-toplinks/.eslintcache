[{"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\reportWebVitals.js":"1","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\App.js":"2","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\index.js":"3","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\AppRouter.jsx":"4","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\header.jsx":"5","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\home.js":"6","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\Tweet.jsx":"7","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\TweetsContainer.jsx":"8","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\listofmostpopulardomain.jsx":"9","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\mostpopulardomain.jsx":"10"},{"size":362,"mtime":1606542810524,"results":"11","hashOfConfig":"12"},{"size":202,"mtime":1608102264553,"results":"13","hashOfConfig":"12"},{"size":500,"mtime":1606542810524,"results":"14","hashOfConfig":"12"},{"size":300,"mtime":1608102278780,"results":"15","hashOfConfig":"12"},{"size":756,"mtime":1608113331508,"results":"16","hashOfConfig":"12"},{"size":2414,"mtime":1608184795861,"results":"17","hashOfConfig":"12"},{"size":710,"mtime":1608189896972,"results":"18","hashOfConfig":"12"},{"size":3228,"mtime":1608185772327,"results":"19","hashOfConfig":"12"},{"size":1824,"mtime":1608185029463,"results":"20","hashOfConfig":"12"},{"size":1505,"mtime":1608184400502,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rjxhwo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\reportWebVitals.js",[],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\App.js",[],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\index.js",[],["46","47"],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\AppRouter.jsx",[],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\header.jsx",["48"],"import React from \"react\";\r\n\r\nexport default function Header({ authenticated, img_url }) {\r\n  // const [authenticated, setAuthenticated] = useState(false);\r\n  const handleSignInClick = () => {\r\n    window.open(\"http://localhost:3000/auth/twitter\", \"_self\");\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    window.open(\"http://localhost:3000/logout\", \"_self\");\r\n    // handleNotAuthenticated();\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div>Twitter Top Links</div>\r\n      {img_url ? <img src={img_url} /> : null}\r\n      <ul className=\"menu\">\r\n        {authenticated ? (\r\n          <li onClick={handleLogoutClick}>Logout</li>\r\n        ) : (\r\n          <li onClick={handleSignInClick}>Login</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\home.js",["49","50","51"],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\Tweet.jsx",["52","53"],"import React from \"react\";\r\n// import tweet from \"../../../models/tweet\";\r\n\r\nfunction Tweet({ tweet }) {\r\n  return (\r\n    <div className=\"tweet\">\r\n      <div className=\"img-container\">\r\n        <img src={tweet.img_url} title={tweet.from} />\r\n      </div>\r\n      <div className=\"text-container\">\r\n        <span className=\"username\">\r\n          <b>{tweet.from}</b>\r\n        </span>\r\n        <span className=\"username\">@{tweet.screen_name}</span>\r\n\r\n        <div className=\"text\">{tweet.text}</div>\r\n        <a href={tweet.expanded_url} target=\"_blank\">\r\n          {tweet.expanded_url}\r\n        </a>\r\n        <div className=\"\">{tweet.tweet_time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\TweetsContainer.jsx",["54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport Mostpopulardomain from \"./mostpopulardomain\";\r\nimport ListofMostpopulardomain from \"./listofmostpopulardomain\";\r\nimport Tweet from \"./Tweet\";\r\n\r\nfunction TweetsContainer() {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(1);\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // fetch(\"http://localhost:3000/tweets\", {\r\n    //   method: \"GET\",\r\n    //   credentials: \"include\",\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\",\r\n    //     \"Access-Control-Allow-Credentials\": true,\r\n    //   },\r\n    // }).then(\r\n    fetch(\"http://localhost:3000/tweetswithurl\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"failed to authenticate user\");\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(\r\n          \"Tweetwithurl------------------\",\r\n          responseJson,\r\n          responseJson[0],\r\n          typeof responseJson\r\n        );\r\n        //   responseJson[0].tweets.map((tweet) => {\r\n        responseJson.map((tweet) => {\r\n          // console.log(\"Tweet--0000\", tweet);\r\n          // console.log(\"Tweet--0000\", tweet.entities.urls[0].expanded_url);\r\n          var url = tweet.user.profile_image_url;\r\n          var img_url = url.replace(\"_normal\", \"\");\r\n          const newtweet = {\r\n            tweet_time: tweet.created_at,\r\n            text: tweet.text,\r\n            retweet_count: tweet.retweet_count,\r\n            from: tweet.user.name,\r\n            screen_name: tweet.user.screen_name,\r\n            img_url: img_url,\r\n            expanded_url: tweet.entities.urls[0].expanded_url,\r\n          };\r\n          return setTweets((tweets) => [...tweets, newtweet]);\r\n        });\r\n        setLoad(true);\r\n        //   console.log(tweet.text, tweet);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // );\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    console.log(\"refreshing\");\r\n    setIsLoad((isLoad) => {\r\n      return isLoad + 1;\r\n    });\r\n  };\r\n\r\n  //   console.log(\"tweets\", tweets);\r\n  return (\r\n    <div className=\"containers\">\r\n      <div>\r\n        {/* <button onClick={refresh}>refresh</button> */}\r\n        <div className=\"heading\">Tweets</div>\r\n        <div className=\"tweets-container containers-borders\">\r\n          {/* <div> */}\r\n          {tweets.length !== 0 ? (\r\n            tweets.map((tweet, index) => {\r\n              return <Tweet key={index} tweet={tweet} />;\r\n            })\r\n          ) : (\r\n            <div className=\"loading\">Loading...</div>\r\n          )}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n      {load ? (\r\n        <>\r\n          <ListofMostpopulardomain load={load} />\r\n          <Mostpopulardomain load={load} />\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetsContainer;\r\n","C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\listofmostpopulardomain.jsx",[],"C:\\Users\\csbot\\Desktop\\Projects\\Vouch\\frontend\\twitter-toplinks\\src\\mostpopulardomain.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":16,"column":18,"nodeType":"62","endLine":16,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":31},{"ruleId":"63","severity":1,"message":"67","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":17,"column":10,"nodeType":"65","messageId":"66","endLine":17,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":8,"column":9,"nodeType":"62","endLine":8,"endColumn":55},{"ruleId":"69","severity":1,"message":"70","line":17,"column":38,"nodeType":"71","endLine":17,"endColumn":53},{"ruleId":"63","severity":1,"message":"72","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":16},{"ruleId":"63","severity":1,"message":"73","line":70,"column":9,"nodeType":"65","messageId":"66","endLine":70,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ListofMostpopulardomain' is defined but never used.","Identifier","unusedVar","'Mostpopulardomain' is defined but never used.","'checkTweets' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'isLoad' is assigned a value but never used.","'refresh' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]